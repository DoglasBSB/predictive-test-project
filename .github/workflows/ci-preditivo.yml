name: Predictive Test Pipeline

on:
  push:
    branches:
      - master  # Ou 'main' se for o caso

jobs:
  predictive_tests:
    runs-on: ubuntu-latest  # Define o sistema operacional do runner

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 📦 Configurar ambiente Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 📌 Instalar dependências do Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: 📄 Criar dataset de teste (se necessário)
        run: |
          if [ ! -f "ml_model/test_data.csv" ]; then
            echo "Gerando test_data.csv..."
            echo "feature1,feature2,label" > ml_model/test_data.csv
            echo "0.1,0.2,1" >> ml_model/test_data.csv
            echo "0.3,0.4,0" >> ml_model/test_data.csv
          fi

      - name: 🛠️ Treinar modelo preditivo (se necessário)
        run: |
          if [ ! -f "ml_model/test_failure_predictor.h5" ]; then
            python3 ml_model/train_lstm.py
          fi
          
      - name: 🚀 Rodar testes no Cypress com Dashboard
        run: npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }} 

      - name: 📊 Salvar artefatos (logs e relatórios)
        uses: actions/upload-artifact@v4
        with:
          name: predictive-test-results
          path: cypress/reports/
