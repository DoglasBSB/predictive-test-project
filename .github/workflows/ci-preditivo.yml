name: Predictive Test Pipeline

on:
  push:
    branches:
      - master  # Ou 'main' se for o caso

jobs:
  predictive_tests:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 📦 Configurar ambiente Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 📌 Instalar dependências do Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: 📄 Criar dataset de teste (se necessário)
        run: |
          if [ ! -f "ml_model/test_data.csv" ] || [ $(find "ml_model/test_data_raw.csv" -mmin -10) ]; then
            echo "🔄 Atualizando dados de teste..."
            python3 ml_model/prepare_data.py
          else
            echo "✅ Dados de teste já estão atualizados."
          fi
 
      - name: 🛠️ Treinar modelo preditivo (se necessário)
        run: |
          if [ ! -f "ml_model/test_failure_predictor.h5" ]; then
            python3 ml_model/train_lstm.py
          else
            echo "✅ Modelo já treinado. Pulando esta etapa."
          fi
      
      - name: 🛠️ Instalar dependências
        run: npm install
  
      - name: 🏗️ Instalar Cypress
        run: npx cypress install
          
        - name: 🚀 Executar testes com Cypress e reportar ao Qase
        run: |
          echo "🔄 Iniciando testes com Cypress..."
          
          # Executa os testes e captura o status (0 = sucesso, 1 = falha)
          QASE_MODE=testops QASE_TESTOPS_API_TOKEN=${{ secrets.QASE_API_TOKEN }} \
          npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
          
          TEST_STATUS=$?  # Captura o status de execução (sucesso ou falha)
      
          echo "🔄 Reportando resultado ao Qase..."
          
          # Sempre reporta ao Qase, independentemente do resultado
          if [ "$TEST_STATUS" -eq 0 ]; then
            echo "✅ Testes passaram! Reportando ao Qase..."
          else
            echo "❌ Testes falharam! Reportando ao Qase..."
          fi
      
          exit $TEST_STATUS  # Finaliza o job com o status correto
        env:
          QASE_REPORT: 1
          QASE_TESTOPS_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: "CPQ"
      

      - name: 📊 Salvar artefatos (logs e relatórios)
        uses: actions/upload-artifact@v4
        with:
          name: predictive-test-results
          path: cypress/reports/
